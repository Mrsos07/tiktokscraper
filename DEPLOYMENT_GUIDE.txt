========================================
  TikTok Scraper - Deployment Guide
========================================

QUICK START
-----------

1. Install Docker Desktop:
   https://www.docker.com/products/docker-desktop

2. Place your Google Drive credentials:
   - Copy credentials.json to ./credentials/

3. Deploy the application:
   .\DEPLOY.ps1

4. Access the services:
   - API: http://localhost:8000/docs
   - Dashboard: http://localhost:8501


AVAILABLE COMMANDS
------------------

.\DEPLOY.ps1      - Build and start all services
.\STOP.ps1        - Stop all services
.\UPDATE.ps1      - Rebuild and restart with latest code
.\LOGS.ps1        - View logs from all containers
.\LOGS.ps1 api    - View logs from API only
.\LOGS.ps1 dashboard - View logs from Dashboard only


DOCKER COMMANDS
---------------

View running containers:
  docker compose ps

View logs:
  docker compose logs -f
  docker compose logs -f api
  docker compose logs -f dashboard

Restart services:
  docker compose restart

Stop services:
  docker compose stop

Start services:
  docker compose start

Remove everything:
  docker compose down

Remove with volumes:
  docker compose down -v


FOLDER STRUCTURE
----------------

./downloads/     - Downloaded videos
./logs/          - Application logs
./credentials/   - Google Drive credentials
./tiktok_scraper.db - SQLite database


TROUBLESHOOTING
---------------

1. Port already in use:
   - Change ports in docker-compose.yml
   - Or stop the conflicting service

2. Build fails:
   - Check Docker is running
   - Try: docker compose build --no-cache

3. Container crashes:
   - Check logs: docker compose logs api
   - Check credentials are in place

4. Can't access services:
   - Wait 30 seconds after starting
   - Check containers: docker compose ps
   - Check logs for errors


MONITORING
----------

Check container status:
  docker compose ps

View resource usage:
  docker stats

Check API health:
  curl http://localhost:8000/health


BACKUP
------

Backup database:
  copy tiktok_scraper.db tiktok_scraper.db.backup

Backup downloads:
  xcopy /E /I downloads downloads_backup


PRODUCTION DEPLOYMENT
---------------------

For production, consider:
1. Use environment variables for secrets
2. Set up reverse proxy (nginx)
3. Enable HTTPS
4. Set up monitoring (Prometheus/Grafana)
5. Configure automatic backups
6. Use volume mounts for persistent data


SUPPORT
-------

Check logs first:
  .\LOGS.ps1

Common issues:
- Credentials not found: Place credentials.json in ./credentials/
- Port conflict: Change ports in docker-compose.yml
- Build errors: Run UPDATE.ps1 to rebuild
